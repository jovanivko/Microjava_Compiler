INFO  17:33:37,792 - Compiling source file: C:\Users\jovanivko\Desktop\PP1\workspace\MJCompiler\test\program.mj
INFO  17:33:37,795 - #2 program
INFO  17:33:37,795 - #43 p
INFO  17:33:37,796 - #8 const
INFO  17:33:37,796 - #43 int
INFO  17:33:37,796 - #43 size
INFO  17:33:37,796 - #17 =
INFO  17:33:37,796 - #40 10
INFO  17:33:37,796 - #31 ;
INFO  17:33:37,796 - #7 class
INFO  17:33:37,796 - #43 Table
INFO  17:33:37,796 - #33 {
INFO  17:33:37,796 - #43 int
INFO  17:33:37,796 - #43 pos
INFO  17:33:37,796 - #37 [
INFO  17:33:37,796 - #38 ]
INFO  17:33:37,796 - #32 ,
INFO  17:33:37,796 - #43 neg
INFO  17:33:37,796 - #37 [
INFO  17:33:37,796 - #38 ]
INFO  17:33:37,797 - #32 ,
INFO  17:33:37,797 - #43 factor
INFO  17:33:37,797 - #31 ;
INFO  17:33:37,797 - #33 {
INFO  17:33:37,797 - #43 Table
INFO  17:33:37,797 - #35 (
INFO  17:33:37,797 - #43 int
INFO  17:33:37,797 - #43 factor
INFO  17:33:37,797 - #36 )
INFO  17:33:37,797 - #33 {
INFO  17:33:37,797 - #43 this
INFO  17:33:37,797 - #29 .
INFO  17:33:37,797 - #43 factor
INFO  17:33:37,797 - #17 =
INFO  17:33:37,797 - #43 factor
INFO  17:33:37,797 - #31 ;
INFO  17:33:37,798 - #34 }
INFO  17:33:37,798 - #5 void
INFO  17:33:37,798 - #43 putp
INFO  17:33:37,798 - #35 (
INFO  17:33:37,798 - #43 int
INFO  17:33:37,798 - #43 a
INFO  17:33:37,798 - #32 ,
INFO  17:33:37,798 - #43 int
INFO  17:33:37,798 - #43 idx
INFO  17:33:37,798 - #36 )
INFO  17:33:37,798 - #33 {
INFO  17:33:37,798 - #43 this
INFO  17:33:37,798 - #29 .
INFO  17:33:37,798 - #43 pos
INFO  17:33:37,798 - #37 [
INFO  17:33:37,798 - #43 idx
INFO  17:33:37,798 - #38 ]
INFO  17:33:37,798 - #17 =
INFO  17:33:37,798 - #43 a
INFO  17:33:37,798 - #31 ;
INFO  17:33:37,798 - #34 }
INFO  17:33:37,798 - #5 void
INFO  17:33:37,799 - #43 putn
INFO  17:33:37,799 - #35 (
INFO  17:33:37,799 - #43 int
INFO  17:33:37,799 - #43 a
INFO  17:33:37,799 - #32 ,
INFO  17:33:37,799 - #43 int
INFO  17:33:37,799 - #43 idx
INFO  17:33:37,799 - #36 )
INFO  17:33:37,799 - #33 {
INFO  17:33:37,799 - #43 this
INFO  17:33:37,799 - #29 .
INFO  17:33:37,799 - #43 neg
INFO  17:33:37,799 - #37 [
INFO  17:33:37,799 - #43 idx
INFO  17:33:37,799 - #38 ]
INFO  17:33:37,799 - #17 =
INFO  17:33:37,799 - #43 a
INFO  17:33:37,799 - #31 ;
INFO  17:33:37,799 - #34 }
INFO  17:33:37,799 - #43 int
INFO  17:33:37,799 - #43 getp
INFO  17:33:37,799 - #35 (
INFO  17:33:37,800 - #43 int
INFO  17:33:37,800 - #43 idx
INFO  17:33:37,800 - #36 )
INFO  17:33:37,800 - #33 {
INFO  17:33:37,800 - #4 return
INFO  17:33:37,800 - #43 pos
INFO  17:33:37,800 - #37 [
INFO  17:33:37,800 - #43 idx
INFO  17:33:37,800 - #38 ]
INFO  17:33:37,800 - #31 ;
INFO  17:33:37,800 - #34 }
INFO  17:33:37,800 - #43 int
INFO  17:33:37,800 - #43 getn
INFO  17:33:37,800 - #35 (
INFO  17:33:37,800 - #43 int
INFO  17:33:37,800 - #43 idx
INFO  17:33:37,800 - #36 )
INFO  17:33:37,800 - #33 {
INFO  17:33:37,800 - #4 return
INFO  17:33:37,800 - #43 neg
INFO  17:33:37,800 - #37 [
INFO  17:33:37,801 - #43 idx
INFO  17:33:37,801 - #38 ]
INFO  17:33:37,801 - #31 ;
INFO  17:33:37,801 - #34 }
INFO  17:33:37,801 - #34 }
INFO  17:33:37,801 - #34 }
INFO  17:33:37,801 - #43 Table
INFO  17:33:37,801 - #43 val
INFO  17:33:37,801 - #31 ;
INFO  17:33:37,801 - #43 Int
INFO  17:33:37,801 - #43 rows
INFO  17:33:37,801 - #32 ,
INFO  17:33:37,801 - #43 columns
INFO  17:33:37,801 - #31 ;
INFO  17:33:37,801 - #33 {
INFO  17:33:37,801 - #5 void
INFO  17:33:37,801 - #43 f
INFO  17:33:37,801 - #35 (
INFO  17:33:37,801 - #43 char
INFO  17:33:37,801 - #43 ch
INFO  17:33:37,801 - #32 ,
INFO  17:33:37,801 - #43 int
INFO  17:33:37,801 - #43 a
INFO  17:33:37,801 - #32 ,
INFO  17:33:37,802 - #43 int
INFO  17:33:37,802 - #43 arg
INFO  17:33:37,802 - #36 )
INFO  17:33:37,802 - #43 int
INFO  17:33:37,802 - #43 x
INFO  17:33:37,802 - #31 ;
INFO  17:33:37,802 - #33 {
INFO  17:33:37,802 - #43 x
INFO  17:33:37,802 - #17 =
INFO  17:33:37,802 - #43 arg
INFO  17:33:37,802 - #31 ;
INFO  17:33:37,802 - #34 }
INFO  17:33:37,802 - #5 void
INFO  17:33:37,802 - #43 main
INFO  17:33:37,802 - #35 (
INFO  17:33:37,802 - #36 )
INFO  17:33:37,802 - #43 int
INFO  17:33:37,802 - #43 x
INFO  17:33:37,802 - #32 ,
INFO  17:33:37,802 - #43 i
INFO  17:33:37,803 - #31 ;
INFO  17:33:37,803 - #43 char
INFO  17:33:37,803 - #43 c
INFO  17:33:37,803 - #32 ,
INFO  17:33:37,803 - #43 int
INFO  17:33:37,803 - #43 arr
INFO  17:33:37,803 - #37 [
INFO  17:33:37,803 - #38 ]
INFO  17:33:37,803 - #31 ;
INFO  17:33:37,803 - #33 {
INFO  17:33:37,803 - #43 val
INFO  17:33:37,803 - #17 =
INFO  17:33:37,803 - #9 new
INFO  17:33:37,803 - #43 Table
INFO  17:33:37,803 - #35 (
INFO  17:33:37,803 - #40 2
INFO  17:33:37,803 - #36 )
INFO  17:33:37,803 - #31 ;
INFO  17:33:37,803 - #43 arr
INFO  17:33:37,803 - #17 =
INFO  17:33:37,803 - #9 new
INFO  17:33:37,803 - #43 int
INFO  17:33:37,803 - #37 [
INFO  17:33:37,803 - #40 3
INFO  17:33:37,803 - #38 ]
INFO  17:33:37,803 - #31 ;
INFO  17:33:37,804 - #43 i
INFO  17:33:37,804 - #17 =
INFO  17:33:37,804 - #40 0
INFO  17:33:37,804 - #31 ;
INFO  17:33:37,804 - #46 while
INFO  17:33:37,804 - #35 (
INFO  17:33:37,804 - #43 i
INFO  17:33:37,804 - #21 <
INFO  17:33:37,804 - #40 3
INFO  17:33:37,804 - #36 )
INFO  17:33:37,804 - #33 {
INFO  17:33:37,804 - #43 arr
INFO  17:33:37,804 - #37 [
INFO  17:33:37,804 - #43 i
INFO  17:33:37,804 - #38 ]
INFO  17:33:37,804 - #17 =
INFO  17:33:37,804 - #43 i
INFO  17:33:37,804 - #31 ;
INFO  17:33:37,804 - #43 i
INFO  17:33:37,804 - #15 ++
INFO  17:33:37,804 - #31 ;
INFO  17:33:37,804 - #34 }
INFO  17:33:37,804 - #43 arr
INFO  17:33:37,804 - #29 .
INFO  17:33:37,804 - #47 foreach
INFO  17:33:37,805 - #35 (
INFO  17:33:37,806 - #43 x
INFO  17:33:37,806 - #39 =>
INFO  17:33:37,806 - #3 print
INFO  17:33:37,806 - #35 (
INFO  17:33:37,806 - #43 x
INFO  17:33:37,806 - #36 )
INFO  17:33:37,806 - #31 ;
INFO  17:33:37,806 - #36 )
INFO  17:33:37,806 - #31 ;
INFO  17:33:37,806 - #43 val
INFO  17:33:37,806 - #29 .
INFO  17:33:37,806 - #43 pos
INFO  17:33:37,806 - #17 =
INFO  17:33:37,806 - #9 new
INFO  17:33:37,806 - #43 int
INFO  17:33:37,806 - #37 [
INFO  17:33:37,806 - #43 size
INFO  17:33:37,806 - #38 ]
INFO  17:33:37,806 - #31 ;
INFO  17:33:37,806 - #43 val
INFO  17:33:37,806 - #29 .
INFO  17:33:37,807 - #43 neg
INFO  17:33:37,807 - #17 =
INFO  17:33:37,807 - #9 new
INFO  17:33:37,807 - #43 int
INFO  17:33:37,807 - #37 [
INFO  17:33:37,807 - #43 size
INFO  17:33:37,807 - #38 ]
INFO  17:33:37,807 - #31 ;
INFO  17:33:37,807 - #10 read
INFO  17:33:37,807 - #35 (
INFO  17:33:37,807 - #43 x
INFO  17:33:37,807 - #36 )
INFO  17:33:37,807 - #31 ;
INFO  17:33:37,807 - #37 [
INFO  17:33:37,807 - #43 i
INFO  17:33:37,807 - #32 ,
INFO  17:33:37,807 - #32 ,
INFO  17:33:37,807 - #43 x
INFO  17:33:37,807 - #38 ]
INFO  17:33:37,807 - #17 =
INFO  17:33:37,807 - #43 arr
INFO  17:33:37,807 - #31 ;
INFO  17:33:37,807 - #46 while
INFO  17:33:37,807 - #35 (
INFO  17:33:37,807 - #43 i
INFO  17:33:37,807 - #21 <
INFO  17:33:37,808 - #43 size
INFO  17:33:37,808 - #36 )
INFO  17:33:37,808 - #33 {
INFO  17:33:37,808 - #43 val
INFO  17:33:37,808 - #29 .
INFO  17:33:37,808 - #43 putp
INFO  17:33:37,808 - #35 (
INFO  17:33:37,808 - #40 0
INFO  17:33:37,808 - #32 ,
INFO  17:33:37,808 - #43 i
INFO  17:33:37,808 - #36 )
INFO  17:33:37,808 - #31 ;
INFO  17:33:37,808 - #43 val
INFO  17:33:37,808 - #29 .
INFO  17:33:37,808 - #43 putn
INFO  17:33:37,808 - #35 (
INFO  17:33:37,808 - #40 0
INFO  17:33:37,808 - #32 ,
INFO  17:33:37,808 - #43 i
INFO  17:33:37,808 - #36 )
INFO  17:33:37,808 - #31 ;
INFO  17:33:37,808 - #43 i
INFO  17:33:37,808 - #15 ++
INFO  17:33:37,808 - #31 ;
INFO  17:33:37,808 - #34 }
INFO  17:33:37,808 - #43 f
INFO  17:33:37,809 - #35 (
INFO  17:33:37,809 - #43 c
INFO  17:33:37,809 - #32 ,
INFO  17:33:37,809 - #43 x
INFO  17:33:37,809 - #32 ,
INFO  17:33:37,809 - #43 i
INFO  17:33:37,809 - #36 )
INFO  17:33:37,809 - #31 ;
INFO  17:33:37,809 - #10 read
INFO  17:33:37,809 - #35 (
INFO  17:33:37,809 - #43 rows
INFO  17:33:37,809 - #36 )
INFO  17:33:37,809 - #31 ;
INFO  17:33:37,809 - #43 x
INFO  17:33:37,809 - #17 =
INFO  17:33:37,809 - #43 rows
INFO  17:33:37,809 - #31 ;
INFO  17:33:37,809 - #46 while
INFO  17:33:37,809 - #35 (
INFO  17:33:37,809 - #41 true
INFO  17:33:37,809 - #36 )
INFO  17:33:37,809 - #33 {
INFO  17:33:37,809 - #44 if
INFO  17:33:37,809 - #35 (
INFO  17:33:37,809 - #43 x
INFO  17:33:37,809 - #22 <=
INFO  17:33:37,809 - #40 0
INFO  17:33:37,809 - #36 )
INFO  17:33:37,809 - #6 break
INFO  17:33:37,810 - #31 ;
INFO  17:33:37,810 - #44 if
INFO  17:33:37,810 - #35 (
INFO  17:33:37,810 - #40 0
INFO  17:33:37,810 - #22 <=
INFO  17:33:37,810 - #43 x
INFO  17:33:37,810 - #27 &&
INFO  17:33:37,810 - #43 x
INFO  17:33:37,810 - #21 <
INFO  17:33:37,810 - #43 size
INFO  17:33:37,810 - #36 )
INFO  17:33:37,810 - #33 {
INFO  17:33:37,810 - #43 val
INFO  17:33:37,810 - #29 .
INFO  17:33:37,810 - #43 putp
INFO  17:33:37,810 - #35 (
INFO  17:33:37,810 - #43 val
INFO  17:33:37,810 - #29 .
INFO  17:33:37,810 - #43 getp
INFO  17:33:37,810 - #35 (
INFO  17:33:37,810 - #43 x
INFO  17:33:37,810 - #36 )
INFO  17:33:37,810 - #13 +
INFO  17:33:37,810 - #40 1
INFO  17:33:37,810 - #36 )
INFO  17:33:37,810 - #31 ;
INFO  17:33:37,810 - #34 }
INFO  17:33:37,810 - #45 else
INFO  17:33:37,810 - #44 if
INFO  17:33:37,810 - #35 (
INFO  17:33:37,811 - #43 size
INFO  17:33:37,811 - #21 <
INFO  17:33:37,811 - #43 x
INFO  17:33:37,811 - #27 &&
INFO  17:33:37,811 - #43 x
INFO  17:33:37,811 - #21 <
INFO  17:33:37,811 - #40 0
INFO  17:33:37,811 - #36 )
INFO  17:33:37,811 - #33 {
INFO  17:33:37,811 - #43 val
INFO  17:33:37,811 - #29 .
INFO  17:33:37,811 - #43 putn
INFO  17:33:37,811 - #35 (
INFO  17:33:37,811 - #43 val
INFO  17:33:37,811 - #29 .
INFO  17:33:37,811 - #43 getn
INFO  17:33:37,811 - #35 (
INFO  17:33:37,811 - #43 x
INFO  17:33:37,811 - #36 )
INFO  17:33:37,811 - #13 +
INFO  17:33:37,811 - #40 1
INFO  17:33:37,811 - #36 )
INFO  17:33:37,811 - #31 ;
INFO  17:33:37,811 - #34 }
INFO  17:33:37,811 - #10 read
INFO  17:33:37,811 - #35 (
INFO  17:33:37,811 - #43 x
INFO  17:33:37,811 - #36 )
INFO  17:33:37,811 - #31 ;
INFO  17:33:37,811 - #34 }
INFO  17:33:37,811 - #34 }
INFO  17:33:37,812 - #34 }
