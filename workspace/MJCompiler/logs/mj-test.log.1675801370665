INFO  21:20:50,392 - Compiling source file: C:\Users\jovanivko\Desktop\PP1\workspace\MJCompiler\test\test.mj
INFO  21:20:50,432 - #2 program
INFO  21:20:50,432 - #43 prog
INFO  21:20:50,432 - #8 const
INFO  21:20:50,433 - #43 int
INFO  21:20:50,433 - #43 size
INFO  21:20:50,433 - #17 =
INFO  21:20:50,434 - #40 10
INFO  21:20:50,434 - #31 ;
INFO  21:20:50,434 - #8 const
INFO  21:20:50,435 - #43 char
INFO  21:20:50,435 - #43 ch
INFO  21:20:50,435 - #17 =
INFO  21:20:50,435 - #42 a
INFO  21:20:50,435 - #32 ,
INFO  21:20:50,436 - #43 ma
INFO  21:20:50,436 - #17 =
INFO  21:20:50,436 - #42 b
INFO  21:20:50,436 - #31 ;
INFO  21:20:50,436 - #43 int
INFO  21:20:50,436 - #43 rows
INFO  21:20:50,436 - #32 ,
INFO  21:20:50,436 - #43 columns
INFO  21:20:50,437 - #31 ;
INFO  21:20:50,437 - #7 class
INFO  21:20:50,437 - #43 Table
INFO  21:20:50,437 - #43 exsdf
ERROR 21:20:50,437 - 
Sintaksna greska na liniji 5
INFO  21:20:50,437 - #33 {
INFO  21:20:50,437 - #43 int
INFO  21:20:50,437 - #43 pos
INFO  21:20:50,438 - #37 [
INFO  21:20:50,438 - #38 ]
INFO  21:20:50,438 - #32 ,
INFO  21:20:50,438 - #43 neg
INFO  21:20:50,438 - #37 [
INFO  21:20:50,438 - #38 ]
INFO  21:20:50,438 - #32 ,
INFO  21:20:50,438 - #43 factor
INFO  21:20:50,438 - #31 ;
INFO  21:20:50,438 - #33 {
INFO  21:20:50,438 - #43 Table
INFO  21:20:50,438 - #35 (
INFO  21:20:50,438 - #43 int
INFO  21:20:50,438 - #43 factor
INFO  21:20:50,439 - #36 )
INFO  21:20:50,439 - #33 {
INFO  21:20:50,439 - #43 this
INFO  21:20:50,439 - #29 .
INFO  21:20:50,439 - #43 factor
INFO  21:20:50,439 - #17 =
INFO  21:20:50,439 - #43 factor
INFO  21:20:50,439 - #31 ;
INFO  21:20:50,439 - #34 }
INFO  21:20:50,439 - #5 void
INFO  21:20:50,439 - #43 putp
INFO  21:20:50,439 - #35 (
INFO  21:20:50,439 - #43 int
INFO  21:20:50,439 - #43 a
INFO  21:20:50,439 - #32 ,
INFO  21:20:50,439 - #43 int
INFO  21:20:50,439 - #43 idx
INFO  21:20:50,439 - #36 )
INFO  21:20:50,439 - #33 {
INFO  21:20:50,440 - #43 this
INFO  21:20:50,440 - #29 .
INFO  21:20:50,440 - #43 pos
INFO  21:20:50,440 - #37 [
INFO  21:20:50,440 - #43 idx
INFO  21:20:50,440 - #38 ]
INFO  21:20:50,440 - #17 =
INFO  21:20:50,440 - #43 a
INFO  21:20:50,440 - #31 ;
INFO  21:20:50,440 - #34 }
INFO  21:20:50,440 - #5 void
INFO  21:20:50,440 - #43 putn
INFO  21:20:50,440 - #35 (
INFO  21:20:50,440 - #43 int
INFO  21:20:50,440 - #43 a
INFO  21:20:50,440 - #32 ,
INFO  21:20:50,440 - #43 int
INFO  21:20:50,440 - #43 idx
INFO  21:20:50,440 - #36 )
INFO  21:20:50,441 - #33 {
INFO  21:20:50,441 - #43 this
INFO  21:20:50,441 - #29 .
INFO  21:20:50,441 - #43 neg
INFO  21:20:50,441 - #37 [
INFO  21:20:50,441 - #43 idx
INFO  21:20:50,441 - #38 ]
INFO  21:20:50,441 - #17 =
INFO  21:20:50,441 - #43 a
INFO  21:20:50,441 - #31 ;
INFO  21:20:50,441 - #34 }
INFO  21:20:50,441 - #43 int
INFO  21:20:50,441 - #43 getp
INFO  21:20:50,441 - #35 (
INFO  21:20:50,441 - #43 int
INFO  21:20:50,441 - #43 idx
INFO  21:20:50,441 - #36 )
INFO  21:20:50,441 - #33 {
INFO  21:20:50,441 - #4 return
INFO  21:20:50,441 - #43 pos
INFO  21:20:50,441 - #37 [
INFO  21:20:50,442 - #43 idx
INFO  21:20:50,442 - #38 ]
INFO  21:20:50,442 - #31 ;
INFO  21:20:50,442 - #34 }
INFO  21:20:50,442 - #43 int
INFO  21:20:50,442 - #43 getn
INFO  21:20:50,442 - #35 (
INFO  21:20:50,442 - #43 int
INFO  21:20:50,442 - #43 idx
INFO  21:20:50,442 - #36 )
INFO  21:20:50,442 - #33 {
INFO  21:20:50,442 - #4 return
INFO  21:20:50,442 - #43 neg
INFO  21:20:50,442 - #37 [
INFO  21:20:50,443 - #43 idx
INFO  21:20:50,443 - #38 ]
INFO  21:20:50,443 - #31 ;
INFO  21:20:50,443 - #34 }
INFO  21:20:50,443 - #34 }
INFO  21:20:50,443 - #34 }
INFO  21:20:50,443 - #43 Table
INFO  21:20:50,443 - #43 val
INFO  21:20:50,443 - #31 ;
INFO  21:20:50,443 - #33 {
INFO  21:20:50,443 - #5 void
INFO  21:20:50,443 - #43 f
INFO  21:20:50,443 - #35 (
INFO  21:20:50,444 - #43 char
INFO  21:20:50,444 - #43 ch
INFO  21:20:50,445 - #32 ,
INFO  21:20:50,445 - #43 int
INFO  21:20:50,446 - #43 a
INFO  21:20:50,446 - #32 ,
INFO  21:20:50,446 - #43 int
INFO  21:20:50,446 - #43 arg
INFO  21:20:50,446 - #36 )
INFO  21:20:50,446 - #43 int
INFO  21:20:50,446 - #43 x
INFO  21:20:50,446 - #31 ;
INFO  21:20:50,446 - #33 {
INFO  21:20:50,446 - #44 if
INFO  21:20:50,446 - #35 (
INFO  21:20:50,446 - #41 true
INFO  21:20:50,446 - #36 )
INFO  21:20:50,446 - #33 {
INFO  21:20:50,446 - #43 ch
INFO  21:20:50,446 - #16 --
INFO  21:20:50,447 - #31 ;
INFO  21:20:50,447 - #34 }
INFO  21:20:50,447 - #43 ch
INFO  21:20:50,447 - #15 ++
INFO  21:20:50,447 - #31 ;
INFO  21:20:50,447 - #43 ch
INFO  21:20:50,447 - #17 =
INFO  21:20:50,447 - #43 ma
INFO  21:20:50,447 - #31 ;
INFO  21:20:50,447 - #43 x
INFO  21:20:50,447 - #17 =
INFO  21:20:50,447 - #43 arg
INFO  21:20:50,447 - #31 ;
INFO  21:20:50,447 - #34 }
INFO  21:20:50,447 - #5 void
INFO  21:20:50,447 - #43 main
INFO  21:20:50,447 - #35 (
INFO  21:20:50,447 - #36 )
INFO  21:20:50,447 - #43 int
INFO  21:20:50,448 - #43 x
INFO  21:20:50,448 - #32 ,
INFO  21:20:50,448 - #43 i
INFO  21:20:50,448 - #31 ;
INFO  21:20:50,448 - #43 char
INFO  21:20:50,448 - #43 c
INFO  21:20:50,448 - #31 ;
INFO  21:20:50,448 - #43 int
INFO  21:20:50,448 - #43 arr
INFO  21:20:50,448 - #37 [
INFO  21:20:50,448 - #38 ]
INFO  21:20:50,448 - #31 ;
INFO  21:20:50,448 - #33 {
INFO  21:20:50,448 - #43 arr
INFO  21:20:50,448 - #17 =
INFO  21:20:50,448 - #9 new
INFO  21:20:50,448 - #43 int
INFO  21:20:50,448 - #37 [
INFO  21:20:50,449 - #40 3
INFO  21:20:50,449 - #38 ]
INFO  21:20:50,449 - #31 ;
INFO  21:20:50,449 - #43 i
INFO  21:20:50,449 - #17 =
INFO  21:20:50,449 - #40 0
INFO  21:20:50,449 - #31 ;
INFO  21:20:50,449 - #46 while
INFO  21:20:50,449 - #35 (
INFO  21:20:50,449 - #43 i
INFO  21:20:50,449 - #21 <
INFO  21:20:50,449 - #40 3
INFO  21:20:50,449 - #36 )
INFO  21:20:50,449 - #33 {
INFO  21:20:50,449 - #43 arr
INFO  21:20:50,449 - #37 [
INFO  21:20:50,449 - #43 i
INFO  21:20:50,449 - #38 ]
INFO  21:20:50,449 - #17 =
INFO  21:20:50,449 - #43 i
INFO  21:20:50,450 - #31 ;
INFO  21:20:50,450 - #43 i
INFO  21:20:50,450 - #15 ++
INFO  21:20:50,450 - #31 ;
INFO  21:20:50,450 - #34 }
INFO  21:20:50,450 - #43 arr
INFO  21:20:50,450 - #29 .
INFO  21:20:50,450 - #47 foreach
INFO  21:20:50,450 - #35 (
INFO  21:20:50,450 - #43 x
INFO  21:20:50,450 - #39 =>
INFO  21:20:50,450 - #3 print
INFO  21:20:50,450 - #35 (
INFO  21:20:50,450 - #43 x
INFO  21:20:50,450 - #36 )
INFO  21:20:50,450 - #31 ;
INFO  21:20:50,450 - #36 )
INFO  21:20:50,450 - #31 ;
INFO  21:20:50,450 - #43 arr
INFO  21:20:50,450 - #17 =
INFO  21:20:50,450 - #9 new
INFO  21:20:50,450 - #43 int
INFO  21:20:50,450 - #37 [
INFO  21:20:50,450 - #43 size
INFO  21:20:50,450 - #38 ]
INFO  21:20:50,451 - #31 ;
INFO  21:20:50,451 - #10 read
INFO  21:20:50,451 - #35 (
INFO  21:20:50,451 - #43 x
INFO  21:20:50,451 - #36 )
INFO  21:20:50,451 - #31 ;
INFO  21:20:50,451 - #37 [
INFO  21:20:50,451 - #43 i
INFO  21:20:50,451 - #32 ,
INFO  21:20:50,451 - #32 ,
INFO  21:20:50,451 - #43 x
INFO  21:20:50,451 - #38 ]
INFO  21:20:50,451 - #17 =
INFO  21:20:50,451 - #43 arr
INFO  21:20:50,451 - #31 ;
INFO  21:20:50,451 - #46 while
INFO  21:20:50,451 - #35 (
INFO  21:20:50,451 - #43 i
INFO  21:20:50,451 - #21 <
INFO  21:20:50,451 - #43 size
INFO  21:20:50,451 - #36 )
INFO  21:20:50,451 - #33 {
INFO  21:20:50,451 - #43 i
INFO  21:20:50,452 - #15 ++
INFO  21:20:50,452 - #31 ;
INFO  21:20:50,452 - #34 }
INFO  21:20:50,452 - #43 f
INFO  21:20:50,452 - #35 (
INFO  21:20:50,452 - #43 c
INFO  21:20:50,452 - #32 ,
INFO  21:20:50,452 - #43 x
INFO  21:20:50,452 - #32 ,
INFO  21:20:50,452 - #43 i
INFO  21:20:50,452 - #36 )
INFO  21:20:50,452 - #31 ;
INFO  21:20:50,452 - #10 read
INFO  21:20:50,452 - #35 (
INFO  21:20:50,452 - #43 rows
INFO  21:20:50,453 - #36 )
INFO  21:20:50,453 - #31 ;
INFO  21:20:50,453 - #43 x
INFO  21:20:50,453 - #17 =
INFO  21:20:50,453 - #43 rows
INFO  21:20:50,453 - #31 ;
INFO  21:20:50,453 - #46 while
INFO  21:20:50,453 - #35 (
INFO  21:20:50,453 - #41 true
INFO  21:20:50,453 - #36 )
INFO  21:20:50,453 - #33 {
INFO  21:20:50,453 - #44 if
INFO  21:20:50,453 - #35 (
INFO  21:20:50,453 - #43 x
INFO  21:20:50,453 - #22 <=
INFO  21:20:50,453 - #40 0
INFO  21:20:50,453 - #36 )
INFO  21:20:50,453 - #6 break
INFO  21:20:50,453 - #31 ;
INFO  21:20:50,453 - #44 if
INFO  21:20:50,453 - #35 (
INFO  21:20:50,453 - #40 0
INFO  21:20:50,453 - #22 <=
INFO  21:20:50,454 - #43 x
INFO  21:20:50,454 - #27 &&
INFO  21:20:50,454 - #43 x
INFO  21:20:50,454 - #21 <
INFO  21:20:50,454 - #43 size
INFO  21:20:50,454 - #36 )
INFO  21:20:50,454 - #33 {
INFO  21:20:50,454 - #34 }
INFO  21:20:50,454 - #45 else
INFO  21:20:50,454 - #44 if
INFO  21:20:50,454 - #35 (
INFO  21:20:50,454 - #23 -
INFO  21:20:50,454 - #43 size
INFO  21:20:50,454 - #21 <
INFO  21:20:50,454 - #43 x
INFO  21:20:50,454 - #27 &&
INFO  21:20:50,454 - #43 x
INFO  21:20:50,454 - #21 <
INFO  21:20:50,454 - #40 0
INFO  21:20:50,454 - #36 )
INFO  21:20:50,455 - #33 {
INFO  21:20:50,455 - #34 }
INFO  21:20:50,455 - #10 read
INFO  21:20:50,455 - #35 (
INFO  21:20:50,455 - #43 x
INFO  21:20:50,455 - #36 )
INFO  21:20:50,455 - #31 ;
INFO  21:20:50,455 - #34 }
INFO  21:20:50,455 - #34 }
INFO  21:20:50,455 - #34 }
ERROR 21:20:50,455 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
