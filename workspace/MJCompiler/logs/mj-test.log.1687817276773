INFO  00:07:31,270 - Compiling source file: C:\Users\jovanivko\Desktop\PP1\workspace\MJCompiler\test\test.mj
INFO  00:07:31,298 - #2 program
INFO  00:07:31,299 - #43 prog
INFO  00:07:31,299 - #8 const
INFO  00:07:31,299 - #43 int
INFO  00:07:31,300 - #43 size
INFO  00:07:31,300 - #17 =
INFO  00:07:31,300 - #40 10
INFO  00:07:31,300 - #31 ;
INFO  00:07:31,301 - #8 const
INFO  00:07:31,302 - #43 char
INFO  00:07:31,302 - #43 ch
INFO  00:07:31,302 - #17 =
INFO  00:07:31,302 - #42 a
INFO  00:07:31,302 - #32 ,
INFO  00:07:31,302 - #43 ma
INFO  00:07:31,302 - #17 =
INFO  00:07:31,302 - #42 b
INFO  00:07:31,302 - #31 ;
INFO  00:07:31,303 - #43 int
INFO  00:07:31,303 - #43 rows
INFO  00:07:31,303 - #32 ,
INFO  00:07:31,303 - #43 columns
INFO  00:07:31,303 - #31 ;
INFO  00:07:31,303 - #33 {
INFO  00:07:31,304 - #5 void
INFO  00:07:31,304 - #43 f
INFO  00:07:31,304 - #35 (
INFO  00:07:31,304 - #43 char
INFO  00:07:31,304 - #43 ch
INFO  00:07:31,304 - #32 ,
INFO  00:07:31,304 - #43 int
INFO  00:07:31,304 - #43 a
INFO  00:07:31,304 - #32 ,
INFO  00:07:31,304 - #43 int
INFO  00:07:31,304 - #43 arg
INFO  00:07:31,304 - #36 )
INFO  00:07:31,305 - #43 int
ERROR 00:07:31,305 - 
Sintaksna greska na liniji 6
INFO  00:07:31,305 - #43 x
INFO  00:07:31,305 - #31 ;
INFO  00:07:31,305 - #33 {
INFO  00:07:31,305 - #44 if
INFO  00:07:31,305 - #35 (
INFO  00:07:31,305 - #41 true
INFO  00:07:31,306 - #36 )
INFO  00:07:31,306 - #33 {
INFO  00:07:31,306 - #43 ch
INFO  00:07:31,306 - #16 --
INFO  00:07:31,306 - #31 ;
INFO  00:07:31,306 - #34 }
INFO  00:07:31,306 - #43 ch
INFO  00:07:31,306 - #15 ++
INFO  00:07:31,306 - #31 ;
INFO  00:07:31,306 - #43 x
INFO  00:07:31,306 - #17 =
INFO  00:07:31,306 - #15 ++
INFO  00:07:31,306 - #31 ;
INFO  00:07:31,306 - #43 ch
INFO  00:07:31,306 - #17 =
INFO  00:07:31,306 - #43 ma
INFO  00:07:31,307 - #31 ;
INFO  00:07:31,307 - #43 x
INFO  00:07:31,307 - #17 =
INFO  00:07:31,307 - #43 arg
INFO  00:07:31,307 - #31 ;
INFO  00:07:31,307 - #34 }
INFO  00:07:31,307 - #5 void
INFO  00:07:31,307 - #43 main
INFO  00:07:31,307 - #35 (
INFO  00:07:31,307 - #36 )
INFO  00:07:31,307 - #43 int
INFO  00:07:31,307 - #43 x
INFO  00:07:31,307 - #32 ,
INFO  00:07:31,307 - #43 i
INFO  00:07:31,307 - #31 ;
INFO  00:07:31,307 - #43 char
INFO  00:07:31,307 - #43 c
INFO  00:07:31,308 - #31 ;
INFO  00:07:31,308 - #43 int
INFO  00:07:31,308 - #43 arr
INFO  00:07:31,308 - #37 [
INFO  00:07:31,308 - #38 ]
INFO  00:07:31,308 - #31 ;
INFO  00:07:31,308 - #33 {
INFO  00:07:31,308 - #43 arr
INFO  00:07:31,308 - #17 =
INFO  00:07:31,308 - #9 new
INFO  00:07:31,308 - #43 int
INFO  00:07:31,308 - #37 [
INFO  00:07:31,308 - #40 3
INFO  00:07:31,308 - #38 ]
INFO  00:07:31,308 - #31 ;
INFO  00:07:31,308 - #43 i
INFO  00:07:31,308 - #17 =
INFO  00:07:31,309 - #40 0
INFO  00:07:31,309 - #31 ;
INFO  00:07:31,309 - #46 while
INFO  00:07:31,309 - #35 (
INFO  00:07:31,309 - #43 i
INFO  00:07:31,309 - #21 <
INFO  00:07:31,309 - #40 3
INFO  00:07:31,309 - #36 )
INFO  00:07:31,309 - #33 {
INFO  00:07:31,309 - #43 arr
INFO  00:07:31,309 - #37 [
INFO  00:07:31,309 - #43 i
INFO  00:07:31,309 - #38 ]
INFO  00:07:31,309 - #17 =
INFO  00:07:31,309 - #43 i
INFO  00:07:31,309 - #31 ;
INFO  00:07:31,309 - #43 i
INFO  00:07:31,310 - #15 ++
INFO  00:07:31,310 - #31 ;
INFO  00:07:31,310 - #34 }
INFO  00:07:31,310 - #43 arr
INFO  00:07:31,310 - #29 .
INFO  00:07:31,310 - #47 foreach
INFO  00:07:31,310 - #35 (
INFO  00:07:31,310 - #43 x
INFO  00:07:31,310 - #39 =>
INFO  00:07:31,310 - #3 print
INFO  00:07:31,310 - #35 (
INFO  00:07:31,310 - #43 x
INFO  00:07:31,310 - #36 )
INFO  00:07:31,310 - #31 ;
INFO  00:07:31,311 - #36 )
INFO  00:07:31,311 - #31 ;
INFO  00:07:31,311 - #43 arr
INFO  00:07:31,311 - #17 =
INFO  00:07:31,311 - #9 new
INFO  00:07:31,311 - #43 int
INFO  00:07:31,311 - #37 [
INFO  00:07:31,311 - #43 size
INFO  00:07:31,311 - #38 ]
INFO  00:07:31,311 - #31 ;
INFO  00:07:31,311 - #10 read
INFO  00:07:31,312 - #35 (
INFO  00:07:31,312 - #43 x
INFO  00:07:31,312 - #36 )
INFO  00:07:31,312 - #31 ;
INFO  00:07:31,312 - #37 [
INFO  00:07:31,312 - #43 i
INFO  00:07:31,312 - #32 ,
INFO  00:07:31,312 - #32 ,
INFO  00:07:31,312 - #43 x
INFO  00:07:31,312 - #38 ]
INFO  00:07:31,312 - #17 =
INFO  00:07:31,312 - #43 arr
INFO  00:07:31,312 - #31 ;
INFO  00:07:31,312 - #46 while
INFO  00:07:31,312 - #35 (
INFO  00:07:31,312 - #43 i
INFO  00:07:31,313 - #21 <
INFO  00:07:31,313 - #43 size
INFO  00:07:31,313 - #36 )
INFO  00:07:31,313 - #33 {
INFO  00:07:31,313 - #43 i
INFO  00:07:31,313 - #15 ++
INFO  00:07:31,313 - #31 ;
INFO  00:07:31,313 - #34 }
INFO  00:07:31,313 - #43 f
INFO  00:07:31,313 - #35 (
INFO  00:07:31,313 - #43 c
INFO  00:07:31,313 - #32 ,
INFO  00:07:31,313 - #43 x
INFO  00:07:31,313 - #32 ,
INFO  00:07:31,313 - #43 i
INFO  00:07:31,313 - #36 )
INFO  00:07:31,314 - #31 ;
INFO  00:07:31,314 - #10 read
INFO  00:07:31,314 - #35 (
INFO  00:07:31,314 - #43 rows
INFO  00:07:31,314 - #36 )
INFO  00:07:31,314 - #31 ;
INFO  00:07:31,314 - #43 x
INFO  00:07:31,314 - #17 =
INFO  00:07:31,314 - #43 rows
INFO  00:07:31,314 - #31 ;
INFO  00:07:31,314 - #46 while
INFO  00:07:31,314 - #35 (
INFO  00:07:31,314 - #41 true
INFO  00:07:31,314 - #36 )
INFO  00:07:31,314 - #33 {
INFO  00:07:31,314 - #44 if
INFO  00:07:31,314 - #35 (
INFO  00:07:31,314 - #43 x
INFO  00:07:31,315 - #22 <=
INFO  00:07:31,315 - #40 0
INFO  00:07:31,315 - #36 )
INFO  00:07:31,315 - #6 break
INFO  00:07:31,315 - #31 ;
INFO  00:07:31,315 - #44 if
INFO  00:07:31,315 - #35 (
INFO  00:07:31,315 - #40 0
INFO  00:07:31,315 - #22 <=
INFO  00:07:31,315 - #43 x
INFO  00:07:31,316 - #27 &&
INFO  00:07:31,317 - #43 x
INFO  00:07:31,317 - #21 <
INFO  00:07:31,317 - #43 size
INFO  00:07:31,317 - #36 )
INFO  00:07:31,317 - #33 {
INFO  00:07:31,317 - #34 }
INFO  00:07:31,317 - #45 else
INFO  00:07:31,317 - #44 if
INFO  00:07:31,317 - #35 (
INFO  00:07:31,317 - #23 -
INFO  00:07:31,317 - #43 size
INFO  00:07:31,317 - #21 <
INFO  00:07:31,317 - #43 x
INFO  00:07:31,317 - #27 &&
INFO  00:07:31,317 - #43 x
INFO  00:07:31,317 - #21 <
INFO  00:07:31,317 - #40 0
INFO  00:07:31,317 - #36 )
INFO  00:07:31,317 - #33 {
INFO  00:07:31,317 - #34 }
INFO  00:07:31,317 - #10 read
INFO  00:07:31,317 - #35 (
INFO  00:07:31,318 - #43 x
INFO  00:07:31,318 - #36 )
INFO  00:07:31,318 - #31 ;
INFO  00:07:31,318 - #34 }
INFO  00:07:31,318 - #34 }
INFO  00:07:31,318 - #34 }
ERROR 00:07:31,318 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 46
