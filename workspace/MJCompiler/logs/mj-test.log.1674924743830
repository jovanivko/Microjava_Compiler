INFO  17:50:20,488 - Compiling source file: C:\Users\jovanivko\Desktop\PP1\workspace\MJCompiler\test\program.mj
INFO  17:50:20,492 - #2 program
INFO  17:50:20,492 - #43 p
INFO  17:50:20,492 - #8 const
INFO  17:50:20,492 - #43 int
INFO  17:50:20,493 - #43 size
INFO  17:50:20,493 - #17 =
INFO  17:50:20,493 - #40 10
INFO  17:50:20,493 - #31 ;
INFO  17:50:20,493 - #8 const
INFO  17:50:20,493 - #43 char
INFO  17:50:20,493 - #43 ch
INFO  17:50:20,493 - #17 =
INFO  17:50:20,493 - #42 a
INFO  17:50:20,493 - #31 ;
INFO  17:50:20,493 - #7 class
INFO  17:50:20,493 - #43 Table
INFO  17:50:20,493 - #33 {
INFO  17:50:20,493 - #43 int
INFO  17:50:20,493 - #43 pos
INFO  17:50:20,493 - #37 [
INFO  17:50:20,494 - #38 ]
INFO  17:50:20,494 - #32 ,
INFO  17:50:20,494 - #43 neg
INFO  17:50:20,494 - #37 [
INFO  17:50:20,494 - #38 ]
INFO  17:50:20,494 - #32 ,
INFO  17:50:20,494 - #43 factor
INFO  17:50:20,494 - #31 ;
INFO  17:50:20,494 - #33 {
INFO  17:50:20,494 - #43 Table
INFO  17:50:20,494 - #35 (
INFO  17:50:20,494 - #43 int
INFO  17:50:20,494 - #43 factor
INFO  17:50:20,494 - #36 )
INFO  17:50:20,494 - #33 {
INFO  17:50:20,494 - #43 this
INFO  17:50:20,495 - #29 .
INFO  17:50:20,495 - #43 factor
INFO  17:50:20,495 - #17 =
INFO  17:50:20,495 - #43 factor
INFO  17:50:20,495 - #31 ;
INFO  17:50:20,495 - #34 }
INFO  17:50:20,495 - #5 void
INFO  17:50:20,495 - #43 putp
INFO  17:50:20,495 - #35 (
INFO  17:50:20,495 - #43 int
INFO  17:50:20,495 - #43 a
INFO  17:50:20,495 - #32 ,
INFO  17:50:20,495 - #43 int
INFO  17:50:20,495 - #43 idx
INFO  17:50:20,495 - #36 )
INFO  17:50:20,495 - #33 {
INFO  17:50:20,495 - #43 this
INFO  17:50:20,495 - #29 .
INFO  17:50:20,495 - #43 pos
INFO  17:50:20,495 - #37 [
INFO  17:50:20,495 - #43 idx
INFO  17:50:20,495 - #38 ]
INFO  17:50:20,496 - #17 =
INFO  17:50:20,496 - #43 a
INFO  17:50:20,496 - #31 ;
INFO  17:50:20,496 - #34 }
INFO  17:50:20,496 - #5 void
INFO  17:50:20,496 - #43 putn
INFO  17:50:20,496 - #35 (
INFO  17:50:20,496 - #43 int
INFO  17:50:20,496 - #43 a
INFO  17:50:20,496 - #32 ,
INFO  17:50:20,497 - #43 int
INFO  17:50:20,497 - #43 idx
INFO  17:50:20,497 - #36 )
INFO  17:50:20,497 - #33 {
INFO  17:50:20,497 - #43 this
INFO  17:50:20,497 - #29 .
INFO  17:50:20,497 - #43 neg
INFO  17:50:20,498 - #37 [
INFO  17:50:20,498 - #43 idx
INFO  17:50:20,498 - #38 ]
INFO  17:50:20,498 - #17 =
INFO  17:50:20,498 - #43 a
INFO  17:50:20,498 - #31 ;
INFO  17:50:20,498 - #34 }
INFO  17:50:20,498 - #43 int
INFO  17:50:20,498 - #43 getp
INFO  17:50:20,498 - #35 (
INFO  17:50:20,498 - #43 int
INFO  17:50:20,498 - #43 idx
INFO  17:50:20,498 - #36 )
INFO  17:50:20,498 - #33 {
INFO  17:50:20,498 - #4 return
INFO  17:50:20,498 - #43 pos
INFO  17:50:20,498 - #37 [
INFO  17:50:20,498 - #43 idx
INFO  17:50:20,498 - #38 ]
INFO  17:50:20,498 - #31 ;
INFO  17:50:20,498 - #34 }
INFO  17:50:20,498 - #43 int
INFO  17:50:20,498 - #43 getn
INFO  17:50:20,498 - #35 (
INFO  17:50:20,499 - #43 int
INFO  17:50:20,499 - #43 idx
INFO  17:50:20,499 - #36 )
INFO  17:50:20,499 - #33 {
INFO  17:50:20,499 - #4 return
INFO  17:50:20,499 - #43 neg
INFO  17:50:20,499 - #37 [
INFO  17:50:20,499 - #43 idx
INFO  17:50:20,499 - #38 ]
INFO  17:50:20,499 - #31 ;
INFO  17:50:20,499 - #34 }
INFO  17:50:20,499 - #34 }
INFO  17:50:20,499 - #34 }
INFO  17:50:20,499 - #43 Table
INFO  17:50:20,499 - #43 val
INFO  17:50:20,499 - #31 ;
INFO  17:50:20,499 - #43 Int
INFO  17:50:20,499 - #43 rows
INFO  17:50:20,499 - #32 ,
INFO  17:50:20,499 - #43 columns
INFO  17:50:20,499 - #31 ;
INFO  17:50:20,499 - #33 {
INFO  17:50:20,499 - #5 void
INFO  17:50:20,499 - #43 f
INFO  17:50:20,499 - #35 (
INFO  17:50:20,500 - #43 char
INFO  17:50:20,500 - #43 ch
INFO  17:50:20,500 - #32 ,
INFO  17:50:20,500 - #43 int
INFO  17:50:20,500 - #43 a
INFO  17:50:20,500 - #32 ,
INFO  17:50:20,500 - #43 int
INFO  17:50:20,500 - #43 arg
INFO  17:50:20,500 - #36 )
INFO  17:50:20,500 - #43 int
INFO  17:50:20,500 - #43 x
INFO  17:50:20,500 - #31 ;
INFO  17:50:20,500 - #33 {
INFO  17:50:20,500 - #43 x
INFO  17:50:20,500 - #17 =
INFO  17:50:20,500 - #43 arg
INFO  17:50:20,500 - #31 ;
INFO  17:50:20,500 - #34 }
INFO  17:50:20,500 - #5 void
INFO  17:50:20,500 - #43 main
INFO  17:50:20,500 - #35 (
INFO  17:50:20,500 - #36 )
INFO  17:50:20,500 - #43 int
INFO  17:50:20,501 - #43 x
INFO  17:50:20,501 - #32 ,
INFO  17:50:20,501 - #43 i
INFO  17:50:20,501 - #31 ;
INFO  17:50:20,501 - #43 char
INFO  17:50:20,501 - #43 c
INFO  17:50:20,501 - #32 ,
INFO  17:50:20,501 - #43 int
INFO  17:50:20,501 - #43 arr
INFO  17:50:20,501 - #37 [
INFO  17:50:20,501 - #38 ]
INFO  17:50:20,501 - #31 ;
INFO  17:50:20,501 - #33 {
INFO  17:50:20,501 - #43 val
INFO  17:50:20,501 - #17 =
INFO  17:50:20,501 - #9 new
INFO  17:50:20,501 - #43 Table
INFO  17:50:20,501 - #35 (
INFO  17:50:20,501 - #40 2
INFO  17:50:20,501 - #36 )
INFO  17:50:20,501 - #31 ;
INFO  17:50:20,501 - #43 arr
INFO  17:50:20,501 - #17 =
INFO  17:50:20,501 - #9 new
INFO  17:50:20,501 - #43 int
INFO  17:50:20,502 - #37 [
INFO  17:50:20,502 - #40 3
INFO  17:50:20,502 - #38 ]
INFO  17:50:20,502 - #31 ;
INFO  17:50:20,502 - #43 i
INFO  17:50:20,502 - #17 =
INFO  17:50:20,502 - #40 0
INFO  17:50:20,502 - #31 ;
INFO  17:50:20,502 - #46 while
INFO  17:50:20,502 - #35 (
INFO  17:50:20,502 - #43 i
INFO  17:50:20,502 - #21 <
INFO  17:50:20,502 - #40 3
INFO  17:50:20,502 - #36 )
INFO  17:50:20,502 - #33 {
INFO  17:50:20,502 - #43 arr
INFO  17:50:20,502 - #37 [
INFO  17:50:20,502 - #43 i
INFO  17:50:20,502 - #38 ]
INFO  17:50:20,502 - #17 =
INFO  17:50:20,502 - #43 i
INFO  17:50:20,502 - #31 ;
INFO  17:50:20,502 - #43 i
INFO  17:50:20,502 - #15 ++
INFO  17:50:20,502 - #31 ;
INFO  17:50:20,502 - #34 }
INFO  17:50:20,502 - #43 arr
INFO  17:50:20,502 - #29 .
INFO  17:50:20,503 - #47 foreach
INFO  17:50:20,503 - #35 (
INFO  17:50:20,503 - #43 x
INFO  17:50:20,503 - #39 =>
INFO  17:50:20,503 - #3 print
INFO  17:50:20,503 - #35 (
INFO  17:50:20,503 - #43 x
INFO  17:50:20,503 - #36 )
INFO  17:50:20,503 - #31 ;
INFO  17:50:20,503 - #36 )
INFO  17:50:20,503 - #31 ;
INFO  17:50:20,503 - #43 val
INFO  17:50:20,503 - #29 .
INFO  17:50:20,503 - #43 pos
INFO  17:50:20,503 - #17 =
INFO  17:50:20,503 - #9 new
INFO  17:50:20,503 - #43 int
INFO  17:50:20,503 - #37 [
INFO  17:50:20,503 - #43 size
INFO  17:50:20,503 - #38 ]
INFO  17:50:20,503 - #31 ;
INFO  17:50:20,503 - #43 val
INFO  17:50:20,503 - #29 .
INFO  17:50:20,503 - #43 neg
INFO  17:50:20,503 - #17 =
INFO  17:50:20,503 - #9 new
INFO  17:50:20,503 - #43 int
INFO  17:50:20,503 - #37 [
INFO  17:50:20,503 - #43 size
INFO  17:50:20,503 - #38 ]
INFO  17:50:20,503 - #31 ;
INFO  17:50:20,504 - #10 read
INFO  17:50:20,504 - #35 (
INFO  17:50:20,504 - #43 x
INFO  17:50:20,504 - #36 )
INFO  17:50:20,504 - #31 ;
INFO  17:50:20,504 - #37 [
INFO  17:50:20,504 - #43 i
INFO  17:50:20,504 - #32 ,
INFO  17:50:20,504 - #32 ,
INFO  17:50:20,504 - #43 x
INFO  17:50:20,504 - #38 ]
INFO  17:50:20,504 - #17 =
INFO  17:50:20,504 - #43 arr
INFO  17:50:20,504 - #31 ;
INFO  17:50:20,504 - #46 while
INFO  17:50:20,504 - #35 (
INFO  17:50:20,504 - #43 i
INFO  17:50:20,504 - #21 <
INFO  17:50:20,504 - #43 size
INFO  17:50:20,504 - #36 )
INFO  17:50:20,504 - #33 {
INFO  17:50:20,504 - #43 val
INFO  17:50:20,504 - #29 .
INFO  17:50:20,504 - #43 putp
INFO  17:50:20,505 - #35 (
INFO  17:50:20,505 - #40 0
INFO  17:50:20,505 - #32 ,
INFO  17:50:20,505 - #43 i
INFO  17:50:20,505 - #36 )
INFO  17:50:20,505 - #31 ;
INFO  17:50:20,505 - #43 val
INFO  17:50:20,505 - #29 .
INFO  17:50:20,505 - #43 putn
INFO  17:50:20,505 - #35 (
INFO  17:50:20,505 - #40 0
INFO  17:50:20,505 - #32 ,
INFO  17:50:20,505 - #43 i
INFO  17:50:20,505 - #36 )
INFO  17:50:20,505 - #31 ;
INFO  17:50:20,505 - #43 i
INFO  17:50:20,505 - #15 ++
INFO  17:50:20,505 - #31 ;
INFO  17:50:20,505 - #34 }
INFO  17:50:20,505 - #43 f
INFO  17:50:20,505 - #35 (
INFO  17:50:20,505 - #43 c
INFO  17:50:20,505 - #32 ,
INFO  17:50:20,505 - #43 x
INFO  17:50:20,505 - #32 ,
INFO  17:50:20,505 - #43 i
INFO  17:50:20,505 - #36 )
INFO  17:50:20,505 - #31 ;
INFO  17:50:20,505 - #10 read
INFO  17:50:20,505 - #35 (
INFO  17:50:20,505 - #43 rows
INFO  17:50:20,505 - #36 )
INFO  17:50:20,506 - #31 ;
INFO  17:50:20,506 - #43 x
INFO  17:50:20,506 - #17 =
INFO  17:50:20,506 - #43 rows
INFO  17:50:20,506 - #31 ;
INFO  17:50:20,506 - #46 while
INFO  17:50:20,506 - #35 (
INFO  17:50:20,506 - #41 true
INFO  17:50:20,506 - #36 )
INFO  17:50:20,506 - #33 {
INFO  17:50:20,506 - #44 if
INFO  17:50:20,506 - #35 (
INFO  17:50:20,506 - #43 x
INFO  17:50:20,506 - #22 <=
INFO  17:50:20,506 - #40 0
INFO  17:50:20,506 - #36 )
INFO  17:50:20,506 - #6 break
INFO  17:50:20,506 - #31 ;
INFO  17:50:20,506 - #44 if
INFO  17:50:20,506 - #35 (
INFO  17:50:20,506 - #40 0
INFO  17:50:20,506 - #22 <=
INFO  17:50:20,506 - #43 x
INFO  17:50:20,506 - #27 &&
INFO  17:50:20,506 - #43 x
INFO  17:50:20,506 - #21 <
INFO  17:50:20,506 - #43 size
INFO  17:50:20,506 - #36 )
INFO  17:50:20,506 - #33 {
INFO  17:50:20,506 - #43 val
INFO  17:50:20,506 - #29 .
INFO  17:50:20,506 - #43 putp
INFO  17:50:20,506 - #35 (
INFO  17:50:20,507 - #43 val
INFO  17:50:20,507 - #29 .
INFO  17:50:20,507 - #43 getp
INFO  17:50:20,507 - #35 (
INFO  17:50:20,507 - #43 x
INFO  17:50:20,507 - #36 )
INFO  17:50:20,507 - #13 +
INFO  17:50:20,507 - #40 1
INFO  17:50:20,507 - #36 )
INFO  17:50:20,507 - #31 ;
INFO  17:50:20,507 - #34 }
INFO  17:50:20,507 - #45 else
INFO  17:50:20,507 - #44 if
INFO  17:50:20,507 - #35 (
INFO  17:50:20,507 - #23 -
INFO  17:50:20,507 - #43 size
INFO  17:50:20,507 - #21 <
INFO  17:50:20,507 - #43 x
INFO  17:50:20,507 - #27 &&
INFO  17:50:20,507 - #43 x
INFO  17:50:20,507 - #21 <
INFO  17:50:20,507 - #40 0
INFO  17:50:20,507 - #36 )
INFO  17:50:20,507 - #33 {
INFO  17:50:20,507 - #43 val
INFO  17:50:20,507 - #29 .
INFO  17:50:20,507 - #43 putn
INFO  17:50:20,507 - #35 (
INFO  17:50:20,507 - #43 val
INFO  17:50:20,507 - #29 .
INFO  17:50:20,507 - #43 getn
INFO  17:50:20,507 - #35 (
INFO  17:50:20,507 - #23 -
INFO  17:50:20,507 - #43 x
INFO  17:50:20,507 - #36 )
INFO  17:50:20,507 - #13 +
INFO  17:50:20,507 - #40 1
INFO  17:50:20,508 - #36 )
INFO  17:50:20,508 - #31 ;
INFO  17:50:20,508 - #34 }
INFO  17:50:20,508 - #10 read
INFO  17:50:20,508 - #35 (
INFO  17:50:20,508 - #43 x
INFO  17:50:20,508 - #36 )
INFO  17:50:20,508 - #31 ;
INFO  17:50:20,508 - #34 }
INFO  17:50:20,508 - #34 }
INFO  17:50:20,508 - #34 }
