INFO  01:04:09,334 - Compiling source file: C:\Users\jovanivko\Desktop\PP1\workspace\MJCompiler\test\test.mj
INFO  01:04:09,361 - #2 program
INFO  01:04:09,361 - #43 prog
INFO  01:04:09,361 - #8 const
INFO  01:04:09,362 - #43 int
INFO  01:04:09,362 - #43 size
INFO  01:04:09,362 - #17 =
INFO  01:04:09,362 - #40 10
INFO  01:04:09,363 - #31 ;
INFO  01:04:09,363 - #8 const
INFO  01:04:09,364 - #43 char
INFO  01:04:09,364 - #43 ch
INFO  01:04:09,364 - #17 =
INFO  01:04:09,364 - #42 a
INFO  01:04:09,364 - #32 ,
INFO  01:04:09,365 - #43 ma
INFO  01:04:09,365 - #17 =
INFO  01:04:09,365 - #42 b
INFO  01:04:09,365 - #31 ;
INFO  01:04:09,365 - #43 int
INFO  01:04:09,365 - #43 rows
INFO  01:04:09,365 - #32 ,
INFO  01:04:09,365 - #43 columns
INFO  01:04:09,366 - #31 ;
INFO  01:04:09,366 - #33 {
INFO  01:04:09,366 - #5 void
INFO  01:04:09,366 - #43 main
INFO  01:04:09,366 - #35 (
INFO  01:04:09,366 - #36 )
INFO  01:04:09,366 - #43 int
INFO  01:04:09,367 - #43 x
INFO  01:04:09,367 - #32 ,
INFO  01:04:09,367 - #43 p
INFO  01:04:09,367 - #31 ;
INFO  01:04:09,367 - #43 bool
INFO  01:04:09,367 - #43 cc
INFO  01:04:09,367 - #31 ;
INFO  01:04:09,367 - #33 {
INFO  01:04:09,367 - #43 arr
INFO  01:04:09,368 - #17 =
INFO  01:04:09,368 - #9 new
INFO  01:04:09,368 - #43 int
INFO  01:04:09,368 - #37 [
INFO  01:04:09,368 - #40 3
INFO  01:04:09,368 - #38 ]
INFO  01:04:09,368 - #31 ;
INFO  01:04:09,369 - #43 i
INFO  01:04:09,369 - #17 =
INFO  01:04:09,369 - #40 0
INFO  01:04:09,369 - #31 ;
INFO  01:04:09,369 - #43 x
INFO  01:04:09,369 - #17 =
INFO  01:04:09,369 - #15 ++
ERROR 01:04:09,369 - 
Sintaksna greska na liniji 10
INFO  01:04:09,369 - #31 ;
INFO  01:04:09,370 - #43 arr
INFO  01:04:09,370 - #17 =
INFO  01:04:09,370 - #9 new
ERROR 01:04:09,370 - Uspesan oporavak od greske pri dodeli vrednosti do ; u liniji 10
INFO  01:04:09,371 - #43 int
INFO  01:04:09,371 - #37 [
INFO  01:04:09,371 - #43 size
INFO  01:04:09,371 - #38 ]
INFO  01:04:09,371 - #31 ;
INFO  01:04:09,371 - #10 read
INFO  01:04:09,371 - #35 (
INFO  01:04:09,371 - #43 x
INFO  01:04:09,371 - #36 )
INFO  01:04:09,371 - #31 ;
INFO  01:04:09,372 - #10 read
INFO  01:04:09,373 - #35 (
INFO  01:04:09,373 - #43 rows
INFO  01:04:09,373 - #36 )
INFO  01:04:09,373 - #31 ;
INFO  01:04:09,373 - #43 x
INFO  01:04:09,373 - #17 =
INFO  01:04:09,373 - #43 rows
INFO  01:04:09,373 - #31 ;
INFO  01:04:09,373 - #34 }
INFO  01:04:09,373 - #34 }
INFO  01:04:09,379 - Program(
  ProgName(
   prog
  ) [ProgName]
  Declarations(
    Declarations(
      Declarations(
        NoDecl(
        ) [NoDecl]
        DeclConst(
          ConstDecl(
            Type(
             int
            ) [Type]
            GlobalConst(
              ConstName(
               size
                NumConst(
                 10
                ) [NumConst]
              ) [ConstName]
            ) [GlobalConst]
          ) [ConstDecl]
        ) [DeclConst]
      ) [Declarations]
      DeclConst(
        ConstDecl(
          Type(
           char
          ) [Type]
          GlobalConstDeclList(
            GlobalConst(
              ConstName(
               ch
                CharConst(
                 a
                ) [CharConst]
              ) [ConstName]
            ) [GlobalConst]
            ConstName(
             ma
              CharConst(
               b
              ) [CharConst]
            ) [ConstName]
          ) [GlobalConstDeclList]
        ) [ConstDecl]
      ) [DeclConst]
    ) [Declarations]
    DeclVar(
      VarDeclaration(
        Type(
         int
        ) [Type]
        VarList(
          SingleVar(
            VarSingleName(
             rows
            ) [VarSingleName]
          ) [SingleVar]
          VarSingleName(
           columns
          ) [VarSingleName]
        ) [VarList]
      ) [VarDeclaration]
    ) [DeclVar]
  ) [Declarations]
  GlobalMethods(
    Meth(
      MethodDecl(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclarations(
          VarDeclarations(
            NoVars(
            ) [NoVars]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarList(
                SingleVar(
                  VarSingleName(
                   x
                  ) [VarSingleName]
                ) [SingleVar]
                VarSingleName(
                 p
                ) [VarSingleName]
              ) [VarList]
            ) [VarDeclaration]
          ) [VarDeclarations]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            SingleVar(
              VarSingleName(
               cc
              ) [VarSingleName]
            ) [SingleVar]
          ) [VarDeclaration]
        ) [VarDeclarations]
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStmt(
                      ) [NoStmt]
                      SingleStatement(
                        Assignment(
                          Desig(
                           arr
                          ) [Desig]
                          AssignExpr(
                            TermExpr(
                              TermSingle(
                                NewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  TermExpr(
                                    TermSingle(
                                      Const(
                                        NumConst(
                                         3
                                        ) [NumConst]
                                      ) [Const]
                                    ) [TermSingle]
                                  ) [TermExpr]
                                ) [NewArray]
                              ) [TermSingle]
                            ) [TermExpr]
                          ) [AssignExpr]
                        ) [Assignment]
                      ) [SingleStatement]
                    ) [Statements]
                    SingleStatement(
                      Assignment(
                        Desig(
                         i
                        ) [Desig]
                        AssignExpr(
                          TermExpr(
                            TermSingle(
                              Const(
                                NumConst(
                                 0
                                ) [NumConst]
                              ) [Const]
                            ) [TermSingle]
                          ) [TermExpr]
                        ) [AssignExpr]
                      ) [Assignment]
                    ) [SingleStatement]
                  ) [Statements]
                  SingleStatement(
                    Assignment(
                      Desig(
                       x
                      ) [Desig]
                      ErrAssignment(
                      ) [ErrAssignment]
                    ) [Assignment]
                  ) [SingleStatement]
                ) [Statements]
                SingleStatement(
                  Assignment(
                    Desig(
                     arr
                    ) [Desig]
                    AssignExpr(
                      TermExpr(
                        TermSingle(
                          NewArray(
                            Type(
                             int
                            ) [Type]
                            TermExpr(
                              TermSingle(
                                Var(
                                  Desig(
                                   size
                                  ) [Desig]
                                ) [Var]
                              ) [TermSingle]
                            ) [TermExpr]
                          ) [NewArray]
                        ) [TermSingle]
                      ) [TermExpr]
                    ) [AssignExpr]
                  ) [Assignment]
                ) [SingleStatement]
              ) [Statements]
              Read(
                Desig(
                 x
                ) [Desig]
              ) [Read]
            ) [Statements]
            Read(
              Desig(
               rows
              ) [Desig]
            ) [Read]
          ) [Statements]
          SingleStatement(
            Assignment(
              Desig(
               x
              ) [Desig]
              AssignExpr(
                TermExpr(
                  TermSingle(
                    Var(
                      Desig(
                       rows
                      ) [Desig]
                    ) [Var]
                  ) [TermSingle]
                ) [TermExpr]
              ) [AssignExpr]
            ) [Assignment]
          ) [SingleStatement]
        ) [Statements]
      ) [MethodDecl]
    ) [Meth]
  ) [GlobalMethods]
) [Program]
INFO  01:04:09,379 - ===================================
ERROR 01:04:09,381 - Parsiranje NIJE uspesno zavrseno!
