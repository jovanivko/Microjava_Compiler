INFO  20:58:11,430 - Compiling source file: C:\Users\jovanivko\Desktop\PP1\workspace\MJCompiler\test\test.mj
INFO  20:58:11,470 - #2 program
INFO  20:58:11,470 - #43 prog
INFO  20:58:11,471 - #8 const
INFO  20:58:11,471 - #43 int
INFO  20:58:11,471 - #43 size
INFO  20:58:11,472 - #17 =
INFO  20:58:11,472 - #40 10
INFO  20:58:11,472 - #31 ;
INFO  20:58:11,473 - #8 const
INFO  20:58:11,473 - #43 char
INFO  20:58:11,473 - #43 ch
INFO  20:58:11,473 - #17 =
INFO  20:58:11,474 - #42 a
INFO  20:58:11,474 - #32 ,
INFO  20:58:11,474 - #43 ma
INFO  20:58:11,474 - #17 =
INFO  20:58:11,474 - #42 b
INFO  20:58:11,474 - #31 ;
INFO  20:58:11,474 - #43 int
INFO  20:58:11,474 - #43 rows
INFO  20:58:11,474 - #32 ,
INFO  20:58:11,475 - #43 columns
INFO  20:58:11,475 - #31 ;
INFO  20:58:11,475 - #7 class
INFO  20:58:11,475 - #43 Table
INFO  20:58:11,475 - #33 {
INFO  20:58:11,476 - #43 int
INFO  20:58:11,476 - #43 pos
INFO  20:58:11,476 - #37 [
INFO  20:58:11,476 - #38 ]
INFO  20:58:11,476 - #32 ,
INFO  20:58:11,476 - #43 neg
INFO  20:58:11,476 - #37 [
INFO  20:58:11,476 - #38 ]
INFO  20:58:11,477 - #32 ,
INFO  20:58:11,477 - #43 factor
INFO  20:58:11,477 - #31 ;
INFO  20:58:11,477 - #33 {
INFO  20:58:11,477 - #43 Table
ERROR 20:58:11,477 - 
Sintaksna greska na liniji 9
INFO  20:58:11,477 - #35 (
INFO  20:58:11,477 - #43 int
INFO  20:58:11,477 - #43 factor
INFO  20:58:11,478 - #36 )
INFO  20:58:11,478 - #33 {
INFO  20:58:11,478 - #43 this
INFO  20:58:11,478 - #29 .
INFO  20:58:11,478 - #43 factor
INFO  20:58:11,478 - #17 =
INFO  20:58:11,478 - #43 factor
INFO  20:58:11,478 - #31 ;
INFO  20:58:11,478 - #34 }
INFO  20:58:11,478 - #5 void
INFO  20:58:11,478 - #43 putp
INFO  20:58:11,478 - #35 (
INFO  20:58:11,478 - #43 int
INFO  20:58:11,478 - #43 a
INFO  20:58:11,478 - #32 ,
INFO  20:58:11,478 - #43 int
INFO  20:58:11,478 - #43 idx
INFO  20:58:11,478 - #36 )
INFO  20:58:11,478 - #33 {
INFO  20:58:11,479 - #43 this
INFO  20:58:11,479 - #29 .
INFO  20:58:11,479 - #43 pos
INFO  20:58:11,479 - #37 [
INFO  20:58:11,479 - #43 idx
INFO  20:58:11,479 - #38 ]
INFO  20:58:11,479 - #17 =
INFO  20:58:11,479 - #43 a
INFO  20:58:11,479 - #31 ;
INFO  20:58:11,479 - #34 }
INFO  20:58:11,479 - #5 void
INFO  20:58:11,479 - #43 putn
INFO  20:58:11,479 - #35 (
INFO  20:58:11,479 - #43 int
INFO  20:58:11,479 - #43 a
INFO  20:58:11,479 - #32 ,
INFO  20:58:11,479 - #43 int
INFO  20:58:11,479 - #43 idx
INFO  20:58:11,480 - #36 )
INFO  20:58:11,480 - #33 {
INFO  20:58:11,480 - #43 this
INFO  20:58:11,480 - #29 .
INFO  20:58:11,480 - #43 neg
INFO  20:58:11,480 - #37 [
INFO  20:58:11,480 - #43 idx
INFO  20:58:11,480 - #38 ]
INFO  20:58:11,480 - #17 =
INFO  20:58:11,480 - #43 a
INFO  20:58:11,480 - #31 ;
INFO  20:58:11,480 - #34 }
INFO  20:58:11,480 - #43 int
INFO  20:58:11,480 - #43 getp
INFO  20:58:11,480 - #35 (
INFO  20:58:11,480 - #43 int
INFO  20:58:11,480 - #43 idx
INFO  20:58:11,480 - #36 )
INFO  20:58:11,480 - #33 {
INFO  20:58:11,480 - #4 return
INFO  20:58:11,481 - #43 pos
INFO  20:58:11,481 - #37 [
INFO  20:58:11,481 - #43 idx
INFO  20:58:11,481 - #38 ]
INFO  20:58:11,481 - #31 ;
INFO  20:58:11,481 - #34 }
INFO  20:58:11,481 - #43 int
INFO  20:58:11,481 - #43 getn
INFO  20:58:11,481 - #35 (
INFO  20:58:11,481 - #43 int
INFO  20:58:11,481 - #43 idx
INFO  20:58:11,481 - #36 )
INFO  20:58:11,481 - #33 {
INFO  20:58:11,481 - #4 return
INFO  20:58:11,481 - #43 neg
INFO  20:58:11,481 - #37 [
INFO  20:58:11,481 - #43 idx
INFO  20:58:11,481 - #38 ]
INFO  20:58:11,481 - #31 ;
INFO  20:58:11,481 - #34 }
INFO  20:58:11,481 - #34 }
INFO  20:58:11,482 - #34 }
INFO  20:58:11,482 - #43 Table
INFO  20:58:11,482 - #43 val
INFO  20:58:11,482 - #31 ;
INFO  20:58:11,482 - #33 {
INFO  20:58:11,482 - #5 void
INFO  20:58:11,482 - #43 f
INFO  20:58:11,482 - #35 (
INFO  20:58:11,482 - #43 char
INFO  20:58:11,482 - #43 ch
INFO  20:58:11,482 - #32 ,
INFO  20:58:11,482 - #43 int
INFO  20:58:11,482 - #43 a
INFO  20:58:11,482 - #32 ,
INFO  20:58:11,482 - #43 int
INFO  20:58:11,483 - #43 arg
INFO  20:58:11,483 - #36 )
INFO  20:58:11,483 - #43 int
INFO  20:58:11,483 - #43 x
INFO  20:58:11,483 - #31 ;
INFO  20:58:11,483 - #33 {
INFO  20:58:11,483 - #44 if
INFO  20:58:11,483 - #35 (
INFO  20:58:11,483 - #41 true
INFO  20:58:11,483 - #36 )
INFO  20:58:11,483 - #33 {
INFO  20:58:11,483 - #43 ch
INFO  20:58:11,483 - #16 --
INFO  20:58:11,483 - #31 ;
INFO  20:58:11,483 - #34 }
INFO  20:58:11,483 - #43 ch
INFO  20:58:11,483 - #15 ++
INFO  20:58:11,483 - #31 ;
INFO  20:58:11,483 - #43 ch
INFO  20:58:11,484 - #17 =
INFO  20:58:11,484 - #43 ma
INFO  20:58:11,484 - #31 ;
INFO  20:58:11,484 - #43 x
INFO  20:58:11,484 - #17 =
INFO  20:58:11,484 - #43 arg
INFO  20:58:11,484 - #31 ;
INFO  20:58:11,484 - #34 }
INFO  20:58:11,484 - #5 void
INFO  20:58:11,484 - #43 main
INFO  20:58:11,484 - #35 (
INFO  20:58:11,484 - #36 )
INFO  20:58:11,484 - #43 int
INFO  20:58:11,484 - #43 x
INFO  20:58:11,484 - #32 ,
INFO  20:58:11,484 - #43 i
INFO  20:58:11,484 - #31 ;
INFO  20:58:11,484 - #43 char
INFO  20:58:11,484 - #43 c
INFO  20:58:11,484 - #31 ;
INFO  20:58:11,484 - #43 int
INFO  20:58:11,484 - #43 arr
INFO  20:58:11,484 - #37 [
INFO  20:58:11,485 - #38 ]
INFO  20:58:11,485 - #31 ;
INFO  20:58:11,485 - #33 {
INFO  20:58:11,485 - #43 arr
INFO  20:58:11,485 - #17 =
INFO  20:58:11,485 - #9 new
INFO  20:58:11,485 - #43 int
INFO  20:58:11,485 - #37 [
INFO  20:58:11,485 - #40 3
INFO  20:58:11,485 - #38 ]
INFO  20:58:11,485 - #31 ;
INFO  20:58:11,485 - #43 i
INFO  20:58:11,485 - #17 =
INFO  20:58:11,485 - #40 0
INFO  20:58:11,485 - #31 ;
INFO  20:58:11,485 - #46 while
INFO  20:58:11,485 - #35 (
INFO  20:58:11,485 - #43 i
INFO  20:58:11,486 - #21 <
INFO  20:58:11,486 - #40 3
INFO  20:58:11,487 - #36 )
INFO  20:58:11,487 - #33 {
INFO  20:58:11,487 - #43 arr
INFO  20:58:11,487 - #37 [
INFO  20:58:11,487 - #43 i
INFO  20:58:11,487 - #38 ]
INFO  20:58:11,487 - #17 =
INFO  20:58:11,487 - #43 i
INFO  20:58:11,487 - #31 ;
INFO  20:58:11,487 - #43 i
INFO  20:58:11,487 - #15 ++
INFO  20:58:11,487 - #31 ;
INFO  20:58:11,487 - #34 }
INFO  20:58:11,487 - #43 arr
INFO  20:58:11,487 - #29 .
INFO  20:58:11,487 - #47 foreach
INFO  20:58:11,487 - #35 (
INFO  20:58:11,487 - #43 x
INFO  20:58:11,487 - #39 =>
INFO  20:58:11,487 - #3 print
INFO  20:58:11,487 - #35 (
INFO  20:58:11,488 - #43 x
INFO  20:58:11,488 - #36 )
INFO  20:58:11,488 - #31 ;
INFO  20:58:11,488 - #36 )
INFO  20:58:11,488 - #31 ;
INFO  20:58:11,488 - #43 arr
INFO  20:58:11,488 - #17 =
INFO  20:58:11,488 - #9 new
INFO  20:58:11,488 - #43 int
INFO  20:58:11,488 - #37 [
INFO  20:58:11,488 - #43 size
INFO  20:58:11,488 - #38 ]
INFO  20:58:11,488 - #31 ;
INFO  20:58:11,488 - #10 read
INFO  20:58:11,488 - #35 (
INFO  20:58:11,488 - #43 x
INFO  20:58:11,488 - #36 )
INFO  20:58:11,488 - #31 ;
INFO  20:58:11,488 - #37 [
INFO  20:58:11,488 - #43 i
INFO  20:58:11,488 - #32 ,
INFO  20:58:11,488 - #32 ,
INFO  20:58:11,489 - #43 x
INFO  20:58:11,489 - #38 ]
INFO  20:58:11,489 - #17 =
INFO  20:58:11,489 - #43 arr
INFO  20:58:11,489 - #31 ;
INFO  20:58:11,489 - #46 while
INFO  20:58:11,489 - #35 (
INFO  20:58:11,489 - #43 i
INFO  20:58:11,489 - #21 <
INFO  20:58:11,489 - #43 size
INFO  20:58:11,489 - #36 )
INFO  20:58:11,489 - #33 {
INFO  20:58:11,489 - #43 i
INFO  20:58:11,489 - #15 ++
INFO  20:58:11,490 - #31 ;
INFO  20:58:11,490 - #34 }
INFO  20:58:11,490 - #43 f
INFO  20:58:11,490 - #35 (
INFO  20:58:11,490 - #43 c
INFO  20:58:11,490 - #32 ,
INFO  20:58:11,490 - #43 x
INFO  20:58:11,490 - #32 ,
INFO  20:58:11,490 - #43 i
INFO  20:58:11,490 - #36 )
INFO  20:58:11,490 - #31 ;
INFO  20:58:11,490 - #10 read
INFO  20:58:11,490 - #35 (
INFO  20:58:11,490 - #43 rows
INFO  20:58:11,490 - #36 )
INFO  20:58:11,490 - #31 ;
INFO  20:58:11,490 - #43 x
INFO  20:58:11,490 - #17 =
INFO  20:58:11,490 - #43 rows
INFO  20:58:11,490 - #31 ;
INFO  20:58:11,490 - #46 while
INFO  20:58:11,490 - #35 (
INFO  20:58:11,490 - #41 true
INFO  20:58:11,490 - #36 )
INFO  20:58:11,490 - #33 {
INFO  20:58:11,490 - #44 if
INFO  20:58:11,491 - #35 (
INFO  20:58:11,491 - #43 x
INFO  20:58:11,491 - #22 <=
INFO  20:58:11,491 - #40 0
INFO  20:58:11,491 - #36 )
INFO  20:58:11,491 - #6 break
INFO  20:58:11,491 - #31 ;
INFO  20:58:11,491 - #44 if
INFO  20:58:11,491 - #35 (
INFO  20:58:11,491 - #40 0
INFO  20:58:11,491 - #22 <=
INFO  20:58:11,491 - #43 x
INFO  20:58:11,491 - #27 &&
INFO  20:58:11,491 - #43 x
INFO  20:58:11,491 - #21 <
INFO  20:58:11,491 - #43 size
INFO  20:58:11,491 - #36 )
INFO  20:58:11,491 - #33 {
INFO  20:58:11,491 - #34 }
INFO  20:58:11,491 - #45 else
INFO  20:58:11,491 - #44 if
INFO  20:58:11,491 - #35 (
INFO  20:58:11,491 - #23 -
INFO  20:58:11,491 - #43 size
INFO  20:58:11,491 - #21 <
INFO  20:58:11,491 - #43 x
INFO  20:58:11,491 - #27 &&
INFO  20:58:11,491 - #43 x
INFO  20:58:11,492 - #21 <
INFO  20:58:11,492 - #40 0
INFO  20:58:11,492 - #36 )
INFO  20:58:11,492 - #33 {
INFO  20:58:11,492 - #34 }
INFO  20:58:11,492 - #10 read
INFO  20:58:11,492 - #35 (
INFO  20:58:11,492 - #43 x
INFO  20:58:11,492 - #36 )
INFO  20:58:11,492 - #31 ;
INFO  20:58:11,492 - #34 }
INFO  20:58:11,492 - #34 }
INFO  20:58:11,492 - #34 }
ERROR 20:58:11,492 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 57
