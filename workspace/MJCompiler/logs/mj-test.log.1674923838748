INFO  17:36:27,462 - Compiling source file: C:\Users\jovanivko\Desktop\PP1\workspace\MJCompiler\test\program.mj
INFO  17:36:27,466 - #2 program
INFO  17:36:27,466 - #43 p
INFO  17:36:27,466 - #8 const
INFO  17:36:27,466 - #43 int
INFO  17:36:27,466 - #43 size
INFO  17:36:27,466 - #17 =
INFO  17:36:27,466 - #40 10
INFO  17:36:27,466 - #31 ;
INFO  17:36:27,466 - #7 class
INFO  17:36:27,466 - #43 Table
INFO  17:36:27,466 - #33 {
INFO  17:36:27,466 - #43 int
INFO  17:36:27,466 - #43 pos
INFO  17:36:27,466 - #37 [
INFO  17:36:27,467 - #38 ]
INFO  17:36:27,467 - #32 ,
INFO  17:36:27,467 - #43 neg
INFO  17:36:27,467 - #37 [
INFO  17:36:27,467 - #38 ]
INFO  17:36:27,467 - #32 ,
INFO  17:36:27,467 - #43 factor
INFO  17:36:27,467 - #31 ;
INFO  17:36:27,467 - #33 {
INFO  17:36:27,467 - #43 Table
INFO  17:36:27,467 - #35 (
INFO  17:36:27,467 - #43 int
INFO  17:36:27,467 - #43 factor
INFO  17:36:27,467 - #36 )
INFO  17:36:27,467 - #33 {
INFO  17:36:27,467 - #43 this
INFO  17:36:27,468 - #29 .
INFO  17:36:27,468 - #43 factor
INFO  17:36:27,468 - #17 =
INFO  17:36:27,468 - #43 factor
INFO  17:36:27,468 - #31 ;
INFO  17:36:27,468 - #34 }
INFO  17:36:27,468 - #5 void
INFO  17:36:27,468 - #43 putp
INFO  17:36:27,468 - #35 (
INFO  17:36:27,468 - #43 int
INFO  17:36:27,468 - #43 a
INFO  17:36:27,468 - #32 ,
INFO  17:36:27,468 - #43 int
INFO  17:36:27,468 - #43 idx
INFO  17:36:27,468 - #36 )
INFO  17:36:27,468 - #33 {
INFO  17:36:27,468 - #43 this
INFO  17:36:27,468 - #29 .
INFO  17:36:27,468 - #43 pos
INFO  17:36:27,468 - #37 [
INFO  17:36:27,468 - #43 idx
INFO  17:36:27,468 - #38 ]
INFO  17:36:27,468 - #17 =
INFO  17:36:27,469 - #43 a
INFO  17:36:27,469 - #31 ;
INFO  17:36:27,469 - #34 }
INFO  17:36:27,469 - #5 void
INFO  17:36:27,469 - #43 putn
INFO  17:36:27,469 - #35 (
INFO  17:36:27,469 - #43 int
INFO  17:36:27,469 - #43 a
INFO  17:36:27,469 - #32 ,
INFO  17:36:27,469 - #43 int
INFO  17:36:27,469 - #43 idx
INFO  17:36:27,469 - #36 )
INFO  17:36:27,469 - #33 {
INFO  17:36:27,469 - #43 this
INFO  17:36:27,469 - #29 .
INFO  17:36:27,469 - #43 neg
INFO  17:36:27,469 - #37 [
INFO  17:36:27,469 - #43 idx
INFO  17:36:27,469 - #38 ]
INFO  17:36:27,470 - #17 =
INFO  17:36:27,470 - #43 a
INFO  17:36:27,470 - #31 ;
INFO  17:36:27,470 - #34 }
INFO  17:36:27,470 - #43 int
INFO  17:36:27,470 - #43 getp
INFO  17:36:27,470 - #35 (
INFO  17:36:27,470 - #43 int
INFO  17:36:27,470 - #43 idx
INFO  17:36:27,470 - #36 )
INFO  17:36:27,470 - #33 {
INFO  17:36:27,470 - #4 return
INFO  17:36:27,470 - #43 pos
INFO  17:36:27,470 - #37 [
INFO  17:36:27,470 - #43 idx
INFO  17:36:27,470 - #38 ]
INFO  17:36:27,470 - #31 ;
INFO  17:36:27,470 - #34 }
INFO  17:36:27,470 - #43 int
INFO  17:36:27,470 - #43 getn
INFO  17:36:27,470 - #35 (
INFO  17:36:27,470 - #43 int
INFO  17:36:27,470 - #43 idx
INFO  17:36:27,470 - #36 )
INFO  17:36:27,471 - #33 {
INFO  17:36:27,471 - #4 return
INFO  17:36:27,471 - #43 neg
INFO  17:36:27,471 - #37 [
INFO  17:36:27,471 - #43 idx
INFO  17:36:27,471 - #38 ]
INFO  17:36:27,471 - #31 ;
INFO  17:36:27,471 - #34 }
INFO  17:36:27,471 - #34 }
INFO  17:36:27,471 - #34 }
INFO  17:36:27,471 - #43 Table
INFO  17:36:27,471 - #43 val
INFO  17:36:27,471 - #31 ;
INFO  17:36:27,471 - #43 Int
INFO  17:36:27,471 - #43 rows
INFO  17:36:27,471 - #32 ,
INFO  17:36:27,471 - #43 columns
INFO  17:36:27,471 - #31 ;
INFO  17:36:27,471 - #33 {
INFO  17:36:27,471 - #5 void
INFO  17:36:27,471 - #43 f
INFO  17:36:27,471 - #35 (
INFO  17:36:27,471 - #43 char
INFO  17:36:27,472 - #43 ch
INFO  17:36:27,472 - #32 ,
INFO  17:36:27,472 - #43 int
INFO  17:36:27,472 - #43 a
INFO  17:36:27,472 - #32 ,
INFO  17:36:27,472 - #43 int
INFO  17:36:27,472 - #43 arg
INFO  17:36:27,472 - #36 )
INFO  17:36:27,472 - #43 int
INFO  17:36:27,472 - #43 x
INFO  17:36:27,472 - #31 ;
INFO  17:36:27,472 - #33 {
INFO  17:36:27,472 - #43 x
INFO  17:36:27,472 - #17 =
INFO  17:36:27,472 - #43 arg
INFO  17:36:27,472 - #31 ;
INFO  17:36:27,472 - #34 }
INFO  17:36:27,472 - #5 void
INFO  17:36:27,472 - #43 main
INFO  17:36:27,472 - #35 (
INFO  17:36:27,473 - #36 )
INFO  17:36:27,473 - #43 int
INFO  17:36:27,473 - #43 x
INFO  17:36:27,473 - #32 ,
INFO  17:36:27,473 - #43 i
INFO  17:36:27,473 - #31 ;
INFO  17:36:27,473 - #43 char
INFO  17:36:27,473 - #43 c
INFO  17:36:27,473 - #32 ,
INFO  17:36:27,473 - #43 int
INFO  17:36:27,473 - #43 arr
INFO  17:36:27,473 - #37 [
INFO  17:36:27,473 - #38 ]
INFO  17:36:27,473 - #31 ;
INFO  17:36:27,473 - #33 {
INFO  17:36:27,473 - #43 val
INFO  17:36:27,473 - #17 =
INFO  17:36:27,473 - #9 new
INFO  17:36:27,473 - #43 Table
INFO  17:36:27,473 - #35 (
INFO  17:36:27,473 - #40 2
INFO  17:36:27,473 - #36 )
INFO  17:36:27,473 - #31 ;
INFO  17:36:27,473 - #43 arr
INFO  17:36:27,473 - #17 =
INFO  17:36:27,473 - #9 new
INFO  17:36:27,474 - #43 int
INFO  17:36:27,474 - #37 [
INFO  17:36:27,474 - #40 3
INFO  17:36:27,474 - #38 ]
INFO  17:36:27,474 - #31 ;
INFO  17:36:27,474 - #43 i
INFO  17:36:27,474 - #17 =
INFO  17:36:27,474 - #40 0
INFO  17:36:27,474 - #31 ;
INFO  17:36:27,474 - #46 while
INFO  17:36:27,474 - #35 (
INFO  17:36:27,474 - #43 i
INFO  17:36:27,474 - #21 <
INFO  17:36:27,474 - #40 3
INFO  17:36:27,474 - #36 )
INFO  17:36:27,474 - #33 {
INFO  17:36:27,474 - #43 arr
INFO  17:36:27,474 - #37 [
INFO  17:36:27,474 - #43 i
INFO  17:36:27,474 - #38 ]
INFO  17:36:27,474 - #17 =
INFO  17:36:27,474 - #43 i
INFO  17:36:27,474 - #31 ;
INFO  17:36:27,474 - #43 i
INFO  17:36:27,475 - #15 ++
INFO  17:36:27,475 - #31 ;
INFO  17:36:27,475 - #34 }
INFO  17:36:27,475 - #43 arr
INFO  17:36:27,475 - #29 .
INFO  17:36:27,475 - #47 foreach
INFO  17:36:27,475 - #35 (
INFO  17:36:27,476 - #43 x
INFO  17:36:27,476 - #39 =>
INFO  17:36:27,476 - #3 print
INFO  17:36:27,476 - #35 (
INFO  17:36:27,476 - #43 x
INFO  17:36:27,476 - #36 )
INFO  17:36:27,476 - #31 ;
INFO  17:36:27,476 - #36 )
INFO  17:36:27,476 - #31 ;
INFO  17:36:27,476 - #43 val
INFO  17:36:27,476 - #29 .
INFO  17:36:27,476 - #43 pos
INFO  17:36:27,476 - #17 =
INFO  17:36:27,476 - #9 new
INFO  17:36:27,476 - #43 int
INFO  17:36:27,477 - #37 [
INFO  17:36:27,477 - #43 size
INFO  17:36:27,477 - #38 ]
INFO  17:36:27,477 - #31 ;
INFO  17:36:27,477 - #43 val
INFO  17:36:27,477 - #29 .
INFO  17:36:27,477 - #43 neg
INFO  17:36:27,477 - #17 =
INFO  17:36:27,477 - #9 new
INFO  17:36:27,477 - #43 int
INFO  17:36:27,477 - #37 [
INFO  17:36:27,477 - #43 size
INFO  17:36:27,477 - #38 ]
INFO  17:36:27,477 - #31 ;
INFO  17:36:27,477 - #10 read
INFO  17:36:27,477 - #35 (
INFO  17:36:27,477 - #43 x
INFO  17:36:27,477 - #36 )
INFO  17:36:27,477 - #31 ;
INFO  17:36:27,477 - #37 [
INFO  17:36:27,477 - #43 i
INFO  17:36:27,477 - #32 ,
INFO  17:36:27,477 - #32 ,
INFO  17:36:27,477 - #43 x
INFO  17:36:27,477 - #38 ]
INFO  17:36:27,477 - #17 =
INFO  17:36:27,477 - #43 arr
INFO  17:36:27,477 - #31 ;
INFO  17:36:27,477 - #46 while
INFO  17:36:27,477 - #35 (
INFO  17:36:27,478 - #43 i
INFO  17:36:27,478 - #21 <
INFO  17:36:27,478 - #43 size
INFO  17:36:27,478 - #36 )
INFO  17:36:27,478 - #33 {
INFO  17:36:27,478 - #43 val
INFO  17:36:27,478 - #29 .
INFO  17:36:27,478 - #43 putp
INFO  17:36:27,478 - #35 (
INFO  17:36:27,478 - #40 0
INFO  17:36:27,478 - #32 ,
INFO  17:36:27,478 - #43 i
INFO  17:36:27,478 - #36 )
INFO  17:36:27,478 - #31 ;
INFO  17:36:27,478 - #43 val
INFO  17:36:27,478 - #29 .
INFO  17:36:27,478 - #43 putn
INFO  17:36:27,478 - #35 (
INFO  17:36:27,478 - #40 0
INFO  17:36:27,478 - #32 ,
INFO  17:36:27,478 - #43 i
INFO  17:36:27,478 - #36 )
INFO  17:36:27,479 - #31 ;
INFO  17:36:27,479 - #43 i
INFO  17:36:27,479 - #15 ++
INFO  17:36:27,479 - #31 ;
INFO  17:36:27,479 - #34 }
INFO  17:36:27,479 - #43 f
INFO  17:36:27,479 - #35 (
INFO  17:36:27,479 - #43 c
INFO  17:36:27,479 - #32 ,
INFO  17:36:27,479 - #43 x
INFO  17:36:27,479 - #32 ,
INFO  17:36:27,479 - #43 i
INFO  17:36:27,479 - #36 )
INFO  17:36:27,479 - #31 ;
INFO  17:36:27,479 - #10 read
INFO  17:36:27,479 - #35 (
INFO  17:36:27,479 - #43 rows
INFO  17:36:27,479 - #36 )
INFO  17:36:27,479 - #31 ;
INFO  17:36:27,479 - #43 x
INFO  17:36:27,479 - #17 =
INFO  17:36:27,479 - #43 rows
INFO  17:36:27,479 - #23 -
INFO  17:36:27,479 - #40 1
INFO  17:36:27,479 - #31 ;
INFO  17:36:27,479 - #46 while
INFO  17:36:27,479 - #35 (
INFO  17:36:27,479 - #41 true
INFO  17:36:27,479 - #36 )
INFO  17:36:27,480 - #33 {
INFO  17:36:27,480 - #44 if
INFO  17:36:27,480 - #35 (
INFO  17:36:27,480 - #43 x
INFO  17:36:27,480 - #22 <=
INFO  17:36:27,480 - #40 0
INFO  17:36:27,480 - #36 )
INFO  17:36:27,480 - #6 break
INFO  17:36:27,480 - #31 ;
INFO  17:36:27,480 - #44 if
INFO  17:36:27,480 - #35 (
INFO  17:36:27,480 - #40 0
INFO  17:36:27,480 - #22 <=
INFO  17:36:27,480 - #43 x
INFO  17:36:27,480 - #27 &&
INFO  17:36:27,480 - #43 x
INFO  17:36:27,480 - #21 <
INFO  17:36:27,480 - #43 size
INFO  17:36:27,480 - #36 )
INFO  17:36:27,480 - #33 {
INFO  17:36:27,480 - #43 val
INFO  17:36:27,480 - #29 .
INFO  17:36:27,480 - #43 putp
INFO  17:36:27,480 - #35 (
INFO  17:36:27,480 - #43 val
INFO  17:36:27,480 - #29 .
INFO  17:36:27,480 - #43 getp
INFO  17:36:27,480 - #35 (
INFO  17:36:27,480 - #43 x
INFO  17:36:27,480 - #36 )
INFO  17:36:27,481 - #13 +
INFO  17:36:27,481 - #40 1
INFO  17:36:27,481 - #36 )
INFO  17:36:27,481 - #31 ;
INFO  17:36:27,481 - #34 }
INFO  17:36:27,481 - #45 else
INFO  17:36:27,481 - #44 if
INFO  17:36:27,481 - #35 (
INFO  17:36:27,481 - #43 size
INFO  17:36:27,481 - #21 <
INFO  17:36:27,481 - #43 x
INFO  17:36:27,481 - #27 &&
INFO  17:36:27,481 - #43 x
INFO  17:36:27,481 - #21 <
INFO  17:36:27,481 - #40 0
INFO  17:36:27,481 - #36 )
INFO  17:36:27,481 - #33 {
INFO  17:36:27,481 - #43 val
INFO  17:36:27,481 - #29 .
INFO  17:36:27,481 - #43 putn
INFO  17:36:27,481 - #35 (
INFO  17:36:27,481 - #43 val
INFO  17:36:27,481 - #29 .
INFO  17:36:27,481 - #43 getn
INFO  17:36:27,481 - #35 (
INFO  17:36:27,481 - #43 x
INFO  17:36:27,481 - #36 )
INFO  17:36:27,481 - #13 +
INFO  17:36:27,481 - #40 1
INFO  17:36:27,481 - #36 )
INFO  17:36:27,482 - #31 ;
INFO  17:36:27,482 - #34 }
INFO  17:36:27,482 - #10 read
INFO  17:36:27,482 - #35 (
INFO  17:36:27,482 - #43 x
INFO  17:36:27,482 - #36 )
INFO  17:36:27,482 - #31 ;
INFO  17:36:27,482 - #34 }
INFO  17:36:27,482 - #34 }
INFO  17:36:27,482 - #34 }
